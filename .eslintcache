[{"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Header.jsx":"1","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/Login.jsx":"2","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Context/AuthContext.jsx":"3","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/firebase.js":"4","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/QuickSearch.jsx":"5","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/SignUp.jsx":"6","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/App.js":"7","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/ForgotPassword.jsx":"8","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/global/ColorSet.js":"9","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Filters/IngredientsFilter.jsx":"10","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/MyRecipes.jsx":"11","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/MainCourse.jsx":"12","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/reducers/index.js":"13","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/Vegan.jsx":"14","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/Vegetarian.jsx":"15","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/Dessert.jsx":"16","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Filters/DropdownMenus.jsx":"17","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/LoadingIcon.jsx":"18","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Filters/Filters.jsx":"19","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Filters/FiltersDisplay.jsx":"20","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Footer.js":"21","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/RecipeDetails.jsx":"22","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Filters/filtersData.jsx":"23","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/index.jsx":"24","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/reducers/recipesReducer.jsx":"25","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/reducers/actions.jsx":"26","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Sidebar.js":"27","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/hamburgerMenu/BurgerMenu.js":"28","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Homepage.js":"29"},{"size":2813,"mtime":1607107116022,"results":"30","hashOfConfig":"31"},{"size":4213,"mtime":1607893445359,"results":"32","hashOfConfig":"31"},{"size":2137,"mtime":1607802066491,"results":"33","hashOfConfig":"31"},{"size":637,"mtime":1607718916018,"results":"34","hashOfConfig":"31"},{"size":4617,"mtime":1607893527374,"results":"35","hashOfConfig":"31"},{"size":4498,"mtime":1607893461555,"results":"36","hashOfConfig":"31"},{"size":1274,"mtime":1607711158846,"results":"37","hashOfConfig":"31"},{"size":4161,"mtime":1607893477287,"results":"38","hashOfConfig":"31"},{"size":213,"mtime":1607886692924,"results":"39","hashOfConfig":"31"},{"size":2196,"mtime":1607889356759,"results":"40","hashOfConfig":"31"},{"size":6630,"mtime":1607901581490,"results":"41","hashOfConfig":"31"},{"size":3102,"mtime":1607893576909,"results":"42","hashOfConfig":"31"},{"size":145,"mtime":1607643956257,"results":"43","hashOfConfig":"31"},{"size":3024,"mtime":1607887611015,"results":"44","hashOfConfig":"31"},{"size":3080,"mtime":1607887571199,"results":"45","hashOfConfig":"31"},{"size":3036,"mtime":1607887469473,"results":"46","hashOfConfig":"31"},{"size":740,"mtime":1607889673492,"results":"47","hashOfConfig":"31"},{"size":436,"mtime":1607647820986,"results":"48","hashOfConfig":"31"},{"size":2057,"mtime":1607889811825,"results":"49","hashOfConfig":"31"},{"size":1596,"mtime":1607890522327,"results":"50","hashOfConfig":"31"},{"size":793,"mtime":1607711196118,"results":"51","hashOfConfig":"31"},{"size":6674,"mtime":1607964129078,"results":"52","hashOfConfig":"31"},{"size":857,"mtime":1607370639869,"results":"53","hashOfConfig":"31"},{"size":553,"mtime":1607648450628,"results":"54","hashOfConfig":"31"},{"size":934,"mtime":1607451640122,"results":"55","hashOfConfig":"31"},{"size":327,"mtime":1607110083424,"results":"56","hashOfConfig":"31"},{"size":1150,"mtime":1607886545274,"results":"57","hashOfConfig":"31"},{"size":872,"mtime":1607011435382,"results":"58","hashOfConfig":"31"},{"size":1218,"mtime":1607887733014,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"f1rp1g",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Header.jsx",[],["129","130"],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/Login.jsx",[],["131","132"],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Context/AuthContext.jsx",["133"],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/firebase.js",[],["134","135"],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/QuickSearch.jsx",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/SignUp.jsx",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/App.js",["136"],"import React from \"react\";\nimport {\n  Switch,\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Header } from \"./components/Header\";\nimport { Footer } from \"./components/Footer\";\nimport { GlobalStyle } from \"./global/GlobalStyle\";\nimport { Homepage } from \"./components/Homepage\";\nimport { Menu } from \"./components/hamburgerMenu/Menu\";\nimport {\n  MyRecipes,\n  Login,\n  SignUp,\n  ForgotPassword,\n  RecipeDetails,\n} from \"./components/pages/index\";\n\nfunction App() {\n  return (\n    <Router>\n      {/* <Wrapper> */}\n      <GlobalStyle />\n      <Header />\n      <Switch>\n        <Route path=\"/home\" component={Homepage} />\n        <Route exact path=\"/myrecipes\" component={MyRecipes} />\n        <Route exact path=\"/recipe-details/:id\" component={RecipeDetails} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/forgot-password\" component={ForgotPassword} />\n        <Redirect exact from=\"/\" to=\"/home\" />\n      </Switch>\n      <Menu />\n      <Footer />\n      {/* </Wrapper> */}\n    </Router>\n  );\n}\n\n// const Wrapper = styled.div`\n//   display: flex;\n//   flex-direction: column;\n// `;\n\nexport default App;\n","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/ForgotPassword.jsx",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/global/ColorSet.js",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Filters/IngredientsFilter.jsx",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/MyRecipes.jsx",["137","138"],"import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { ColorSet } from \"../../global/ColorSet\";\nimport { AuthContext } from \"../Context/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport const MyRecipes = () => {\n  const { currentUserId, signOut, getCurrentUser, currentUser } = useContext(\n    AuthContext\n  );\n  const history = useHistory();\n  const [favoritesRecipeId, setFavoritesRecipeId] = useState([]);\n  const [favoritesRecipe, setFavoritesRecipe] = useState([]);\n\n  const handleClick = (id) => {\n    history.push(`/recipe-details/${id}`);\n  };\n\n  const getFavoritesRecipesIdFromUser = () => {\n    if (currentUser) {\n      let stringId;\n      if (currentUser.favorites.length === 1) {\n        stringId = currentUser.favorites[0].toString();\n        setFavoritesRecipeId(stringId);\n      } else {\n        stringId = currentUser.favorites.join();\n        setFavoritesRecipeId(stringId);\n      }\n    }\n  };\n\n  const fetchFavorites = async () => {\n    //Fetch all recipes from the array\n    try {\n      if (favoritesRecipeId.length > 0) {\n        const res = await fetch(`/recipes/${favoritesRecipeId}`, {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        });\n        const json = await res.json();\n        setFavoritesRecipe(json.data);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getCurrentUser();\n    getFavoritesRecipesIdFromUser();\n    fetchFavorites();\n  }, [currentUserId, favoritesRecipeId]);\n\n  console.log(favoritesRecipe);\n\n  return (\n    <Wrapper>\n      {currentUser ? (\n        <SignedInContainer>\n          <NameContainer>\n            <Text>Welcome back,</Text>\n            <UserName>{currentUser.name}</UserName>\n          </NameContainer>\n          <TitleContainer>\n            <FavoriteTitle>My Favorites</FavoriteTitle>\n          </TitleContainer>\n          {favoritesRecipe.length > 0 ? (\n            favoritesRecipe.map((favoriteRecipe) => {\n              return (\n                <Recipe onClick={() => handleClick(favoriteRecipe.id)}>\n                  <Img src={favoriteRecipe.image} />\n                  <Title>{favoriteRecipe.title}</Title>\n                </Recipe>\n              );\n            })\n          ) : (\n            <NoRecipesContainer>\n              Add recipes to your favorites first\n            </NoRecipesContainer>\n          )}\n          <ButtonContainer>\n            <LogOut\n              onClick={() => {\n                signOut();\n                history.push(\"/login\");\n              }}\n            >\n              Sign Out\n            </LogOut>\n          </ButtonContainer>\n        </SignedInContainer>\n      ) : (\n        <NoUserContainer>\n          <LinkContainer>\n            <TextForLinks>\n              You need an accout to save your favorite recipes!\n            </TextForLinks>\n            <StyledLinks to=\"/signup\">Sign me up!</StyledLinks>\n          </LinkContainer>\n          <LinkContainer>\n            <TextForLinks>You already have an account?</TextForLinks>\n            <StyledLinks to=\"/login\">Login</StyledLinks>\n          </LinkContainer>\n        </NoUserContainer>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  height: 100%;\n  min-height: 90vh;\n  background-color: ${ColorSet.primaryLight};\n  @media (max-width: 500px) {\n  }\n`;\n\nconst SignedInContainer = styled.div`\n  height: 100%;\n  @media (max-width: 500px) {\n  }\n`;\n\nconst NameContainer = styled.div`\n  height: 50px;\n  background-color: ${ColorSet.dark};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 500px) {\n    height: 70px;\n  }\n`;\n\nconst NoUserContainer = styled(SignedInContainer)`\n  height: 85vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 500px) {\n  }\n`;\n\nconst LinkContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 60px;\n  @media (max-width: 500px) {\n  }\n`;\n\nconst UserName = styled.span`\n  color: ${ColorSet.primary};\n  margin: auto 15px;\n  font-style: italic;\n  font-size: 1.9rem;\n  @media (max-width: 500px) {\n    font-size: 1.6rem;\n  }\n`;\n\nconst Text = styled.span`\n  color: white;\n  font-size: 1.4rem;\n  @media (max-width: 500px) {\n    font-size: 1.7rem;\n  }\n`;\n\nconst Recipe = styled.button`\n  margin: 20px;\n  margin-left: 50px;\n  width: 550px;\n  background-color: white;\n  color: ${ColorSet.dark};\n  border: none;\n  border-radius: 10px;\n  box-shadow: 0px 10px 13px -7px gray, 5px 5px 15px 5px rgba(0, 0, 0, 0);\n  &:hover {\n    cursor: pointer;\n  }\n  @media (max-width: 500px) {\n    width: 95%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px auto;\n  }\n`;\n\nconst NoRecipesContainer = styled.div`\n  font-size: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 550px;\n  font-style: italic;\n  color: ${ColorSet.dark};\n  @media (max-width: 500px) {\n    font-size: 1rem;\n  }\n`;\n\nconst Img = styled.img`\n  border-radius: 15%;\n  width: 85%;\n  margin-top: 10px;\n  @media (max-width: 500px) {\n    width: 380px;\n  }\n`;\n\nconst Title = styled.p`\n  font-size: 2rem;\n  margin: 10px auto;\n  min-height: 80px;\n  @media (max-width: 500px) {\n    font-size: 1.5rem;\n    min-height: 30px;\n  }\n`;\n\nconst RecipesColumns = styled.div`\n  column-count: 2;\n  width: 100%;\n  margin-bottom: 30px;\n  @media (max-width: 500px) {\n    column-count: 1;\n  }\n`;\n\nconst FavoriteTitle = styled.p`\n  font-size: 1.9rem;\n  color: ${ColorSet.dark};\n  text-decoration: underline;\n  font-weight: bold;\n  @media (max-width: 500px) {\n  }\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 10px auto;\n  height: 50px;\n  @media (max-width: 500px) {\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  background-color: transparent;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  height: 120px;\n  @media (max-width: 500px) {\n  }\n`;\n\nconst LogOut = styled.button`\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    cursor: pointer;\n  }\n\n  font-size: 1.3rem;\n  height: 40px;\n  width: 200px;\n  margin-top: 50px;\n  border: 3px solid ${ColorSet.red};\n  color: ${ColorSet.red};\n  background-color: white;\n  border-radius: 10px;\n  @media (max-width: 500px) {\n    margin-top: 15px;\n  }\n`;\n\nconst TextForLinks = styled.p`\n  font-size: 1.3rem;\n  @media (max-width: 500px) {\n  }\n`;\n\nconst StyledLinks = styled(Link)`\n  font-size: 1.3rem;\n  color: ${ColorSet.dark};\n  @media (max-width: 500px) {\n  }\n`;\n","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/MainCourse.jsx",["139"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { LoadingIcon } from \"../LoadingIcon\";\nimport { ColorSet } from \"../../global/ColorSet\";\nimport {\n  requestRecipesData,\n  receivedRecipesDataError,\n  receivedRecipesData,\n} from \"../../reducers/actions\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const MainCourse = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let filteredRecipes = useSelector((state) => {\n    return state.recipesReducer.mainCourse.recipes;\n  });\n  // let filteredRecipes;\n  console.log(filteredRecipes);\n\n  const handleClick = (id) => {\n    history.push(`/recipe-details/${id}`);\n  };\n\n  const fetchRecipesFromType = async () => {\n    dispatch(requestRecipesData());\n    try {\n      const res = await fetch(`/type/main`);\n      const json = await res.json();\n      console.log(json);\n      dispatch(receivedRecipesData({ recipes: json.data, type: \"mainCourse\" }));\n    } catch (error) {\n      dispatch(receivedRecipesDataError());\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(requestRecipesData());\n    fetchRecipesFromType();\n  }, []);\n  return (\n    <Wrapper>\n      <RecipesColumns>\n        {filteredRecipes ? (\n          filteredRecipes.map((recipe) => {\n            return (\n              <RecipesContainer key={recipe.id}>\n                <Recipe onClick={() => handleClick(recipe.id)}>\n                  <Img src={recipe.image} />\n                  <Title>{recipe.title}</Title>\n                </Recipe>\n              </RecipesContainer>\n            );\n          })\n        ) : (\n          <LoadingWrapper>\n            <LoadingIcon />\n          </LoadingWrapper>\n        )}\n      </RecipesColumns>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  background-color: ${ColorSet.primaryExtraLight};\n  width: 100%;\n  @media (max-width: 500px) {\n    background-color: ${ColorSet.primaryLight};\n  }\n`;\n\nconst RecipesContainer = styled.div``;\n\nconst Recipe = styled.button`\n  margin: 20px;\n  margin-left: 50px;\n  width: 700px;\n  background-color: white;\n  color: ${ColorSet.dark};\n  border: none;\n  border-radius: 10px;\n  box-shadow: 0px 10px 13px -7px gray, 5px 5px 15px 5px rgba(0, 0, 0, 0);\n  &:hover {\n    cursor: pointer;\n  }\n  @media (max-width: 500px) {\n    width: 95%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px auto;\n  }\n`;\nconst Img = styled.img`\n  border-radius: 15%;\n  width: 85%;\n  margin-top: 10px;\n  @media (max-width: 500px) {\n    width: 380px;\n  }\n`;\n\nconst Title = styled.p`\n  font-size: 2rem;\n  margin: 10px auto;\n  min-height: 80px;\n  @media (max-width: 500px) {\n    font-size: 1.5rem;\n    min-height: 30px;\n  }\n`;\n\nconst RecipesColumns = styled.div`\n  column-count: 2;\n  width: 100%;\n  margin-bottom: 30px;\n  @media (max-width: 500px) {\n    column-count: 1;\n  }\n`;\n\nconst LoadingWrapper = styled.div`\n  position: absolute;\n  left: 55%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  @media (max-width: 500px) {\n    left: 50%;\n  }\n`;\n","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/reducers/index.js",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/Vegan.jsx",["140"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { LoadingIcon } from \"../LoadingIcon\";\n\nimport { ColorSet } from \"../../global/ColorSet\";\nimport {\n  requestRecipesData,\n  receivedRecipesDataError,\n  receivedRecipesData,\n} from \"../../reducers/actions\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const Vegan = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let filteredRecipes = useSelector((state) => {\n    return state.recipesReducer.vegan.recipes;\n  });\n  console.log(filteredRecipes);\n\n  const fetchRecipesFromDiet = async () => {\n    dispatch(requestRecipesData());\n    try {\n      const res = await fetch(`/diet/vegan`);\n      const json = await res.json();\n      console.log(json);\n      dispatch(receivedRecipesData({ recipes: json.data, type: \"vegan\" }));\n    } catch (error) {\n      dispatch(receivedRecipesDataError());\n      console.log(error.message);\n    }\n  };\n  const handleClick = (id) => {\n    history.push(`/recipe-details/${id}`);\n  };\n  useEffect(() => {\n    fetchRecipesFromDiet();\n  }, []);\n\n  return (\n    <Wrapper>\n      <RecipesColumns>\n        {filteredRecipes ? (\n          filteredRecipes.map((recipe) => {\n            return (\n              <RecipesContainer key={recipe.id}>\n                <Recipe onClick={() => handleClick(recipe.id)}>\n                  <Img src={recipe.image} />\n                  <Title>{recipe.title}</Title>\n                </Recipe>\n              </RecipesContainer>\n            );\n          })\n        ) : (\n          <LoadingWrapper>\n            <LoadingIcon />\n          </LoadingWrapper>\n        )}\n      </RecipesColumns>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  background-color: ${ColorSet.primaryExtraLight};\n  width: 100%;\n  @media (max-width: 500px) {\n    background-color: ${ColorSet.primaryLight};\n  }\n`;\n\nconst RecipesContainer = styled.div``;\n\nconst Recipe = styled.button`\n  margin: 20px;\n  margin-left: 50px;\n  width: 700px;\n  background-color: white;\n  color: ${ColorSet.dark};\n  border: none;\n  border-radius: 10px;\n  box-shadow: 0px 10px 13px -7px gray, 5px 5px 15px 5px rgba(0, 0, 0, 0);\n  &:hover {\n    cursor: pointer;\n  }\n  @media (max-width: 500px) {\n    width: 95%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px auto;\n  }\n`;\nconst Img = styled.img`\n  border-radius: 15%;\n  width: 85%;\n  margin-top: 10px;\n  @media (max-width: 500px) {\n    width: 380px;\n  }\n`;\n\nconst Title = styled.p`\n  font-size: 2rem;\n  margin: 10px auto;\n  min-height: 80px;\n  @media (max-width: 500px) {\n    font-size: 1.5rem;\n    min-height: 30px;\n  }\n`;\n\nconst RecipesColumns = styled.div`\n  column-count: 2;\n  width: 100%;\n  margin-bottom: 30px;\n  @media (max-width: 500px) {\n    column-count: 1;\n  }\n`;\n\nconst LoadingWrapper = styled.div`\n  position: absolute;\n  left: 55%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  @media (max-width: 500px) {\n    left: 50%;\n  }\n`;\n","/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/Vegetarian.jsx",["141"],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/Dessert.jsx",["142"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { LoadingIcon } from \"../LoadingIcon\";\nimport { ColorSet } from \"../../global/ColorSet\";\nimport {\n  requestRecipesData,\n  receivedRecipesDataError,\n  receivedRecipesData,\n} from \"../../reducers/actions\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const Dessert = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let filteredRecipes = useSelector((state) => {\n    return state.recipesReducer.dessert.recipes;\n  });\n\n  const fetchRecipesFromType = async () => {\n    dispatch(requestRecipesData());\n    try {\n      const res = await fetch(`/type/dessert`);\n      const json = await res.json();\n      console.log(json);\n      dispatch(receivedRecipesData({ recipes: json.data, type: \"dessert\" }));\n    } catch (error) {\n      dispatch(receivedRecipesDataError());\n      console.log(error.message);\n    }\n  };\n  const handleClick = (id) => {\n    history.push(`/recipe-details/${id}`);\n  };\n\n  useEffect(() => {\n    dispatch(requestRecipesData());\n    fetchRecipesFromType();\n  }, []);\n\n  return (\n    <Wrapper>\n      <RecipesColumns>\n        {filteredRecipes ? (\n          filteredRecipes.map((recipe) => {\n            return (\n              <RecipesContainer key={recipe.id}>\n                <Recipe onClick={() => handleClick(recipe.id)}>\n                  <Img src={recipe.image} />\n                  <Title>{recipe.title}</Title>\n                </Recipe>\n              </RecipesContainer>\n            );\n          })\n        ) : (\n          <LoadingWrapper>\n            <LoadingIcon />\n          </LoadingWrapper>\n        )}\n      </RecipesColumns>\n    </Wrapper>\n  );\n};\nconst Wrapper = styled.div`\n  background-color: ${ColorSet.primaryExtraLight};\n  width: 100%;\n  @media (max-width: 500px) {\n    background-color: ${ColorSet.primaryLight};\n  }\n`;\n\nconst RecipesContainer = styled.div``;\n\nconst Recipe = styled.button`\n  margin: 20px;\n  margin-left: 50px;\n  width: 700px;\n  background-color: white;\n  color: ${ColorSet.dark};\n  border: none;\n  border-radius: 10px;\n  box-shadow: 0px 10px 13px -7px gray, 5px 5px 15px 5px rgba(0, 0, 0, 0);\n  &:hover {\n    cursor: pointer;\n  }\n  @media (max-width: 500px) {\n    width: 95%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px auto;\n  }\n`;\nconst Img = styled.img`\n  border-radius: 15%;\n  width: 85%;\n  margin-top: 10px;\n  @media (max-width: 500px) {\n    width: 380px;\n  }\n`;\n\nconst Title = styled.p`\n  font-size: 2rem;\n  margin: 10px auto;\n  min-height: 80px;\n  @media (max-width: 500px) {\n    font-size: 1.5rem;\n    min-height: 30px;\n  }\n`;\n\nconst RecipesColumns = styled.div`\n  column-count: 2;\n  width: 100%;\n  margin-bottom: 30px;\n  @media (max-width: 500px) {\n    column-count: 1;\n  }\n`;\n\nconst LoadingWrapper = styled.div`\n  position: absolute;\n  left: 55%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  @media (max-width: 500px) {\n    left: 50%;\n  }\n`;\n",["143","144"],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Filters/DropdownMenus.jsx",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/LoadingIcon.jsx",[],["145","146"],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Filters/Filters.jsx",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Filters/FiltersDisplay.jsx",[],["147","148"],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Footer.js",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/RecipeDetails.jsx",["149"],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Filters/filtersData.jsx",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/pages/index.jsx",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/reducers/recipesReducer.jsx",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/reducers/actions.jsx",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Sidebar.js",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/hamburgerMenu/BurgerMenu.js",[],"/home/samuel/concordia-bootcamp/Final_Project_EzCooking/client/src/components/Homepage.js",["150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"151","replacedBy":"155"},{"ruleId":"153","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":53,"column":11,"nodeType":"159","messageId":"160","endLine":53,"endColumn":14},{"ruleId":"151","replacedBy":"161"},{"ruleId":"153","replacedBy":"162"},{"ruleId":"157","severity":1,"message":"163","line":8,"column":8,"nodeType":"159","messageId":"160","endLine":8,"endColumn":14},{"ruleId":"164","severity":1,"message":"165","line":54,"column":6,"nodeType":"166","endLine":54,"endColumn":40,"suggestions":"167"},{"ruleId":"157","severity":1,"message":"168","line":229,"column":7,"nodeType":"159","messageId":"160","endLine":229,"endColumn":21},{"ruleId":"164","severity":1,"message":"169","line":44,"column":6,"nodeType":"166","endLine":44,"endColumn":8,"suggestions":"170"},{"ruleId":"164","severity":1,"message":"171","line":39,"column":6,"nodeType":"166","endLine":39,"endColumn":8,"suggestions":"172"},{"ruleId":"164","severity":1,"message":"173","line":38,"column":6,"nodeType":"166","endLine":38,"endColumn":8,"suggestions":"174"},{"ruleId":"164","severity":1,"message":"169","line":40,"column":6,"nodeType":"166","endLine":40,"endColumn":8,"suggestions":"175"},{"ruleId":"151","replacedBy":"176"},{"ruleId":"153","replacedBy":"177"},{"ruleId":"151","replacedBy":"178"},{"ruleId":"153","replacedBy":"179"},{"ruleId":"151","replacedBy":"180"},{"ruleId":"153","replacedBy":"181"},{"ruleId":"164","severity":1,"message":"182","line":31,"column":6,"nodeType":"166","endLine":31,"endColumn":8,"suggestions":"183"},{"ruleId":"157","severity":1,"message":"184","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":18},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],["185"],["186"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar",["185"],["186"],"'styled' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchFavorites', 'getCurrentUser', and 'getFavoritesRecipesIdFromUser'. Either include them or remove the dependency array.","ArrayExpression",["187"],"'RecipesColumns' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'fetchRecipesFromType'. Either include them or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'fetchRecipesFromDiet'. Either include it or remove the dependency array.",["189"],"React Hook useEffect has missing dependencies: 'dispatch' and 'fetchRecipesFromDiet'. Either include them or remove the dependency array.",["190"],["191"],["185"],["186"],["185"],["186"],["185"],["186"],"React Hook useEffect has a missing dependency: 'fetchSingleRecipe'. Either include it or remove the dependency array.",["192"],"'ColorSet' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"195","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [currentUserId, favoritesRecipeId, fetchFavorites, getCurrentUser, getFavoritesRecipesIdFromUser]",{"range":"204","text":"205"},"Update the dependencies array to be: [dispatch, fetchRecipesFromType]",{"range":"206","text":"207"},"Update the dependencies array to be: [fetchRecipesFromDiet]",{"range":"208","text":"209"},"Update the dependencies array to be: [dispatch, fetchRecipesFromDiet]",{"range":"210","text":"211"},{"range":"212","text":"207"},"Update the dependencies array to be: [fetchSingleRecipe]",{"range":"213","text":"214"},[1547,1581],"[currentUserId, favoritesRecipeId, fetchFavorites, getCurrentUser, getFavoritesRecipesIdFromUser]",[1226,1228],"[dispatch, fetchRecipesFromType]",[1147,1149],"[fetchRecipesFromDiet]",[1124,1126],"[dispatch, fetchRecipesFromDiet]",[1160,1162],[876,878],"[fetchSingleRecipe]"]